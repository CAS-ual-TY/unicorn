name: Release

on:
  push:
    branches:
      - release
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
    build: 
        name: Build Release Binary
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            toolchain: [1.50.0]
            os: [ubuntu-20.04, macos-10.15, windows-2019]
            include:
              - os: ubuntu-20.04
                features: z3,boolector
                target: x86_64-unknown-linux-gnu
                extension: ""
              - os: macos-10.15
                features: z3,boolector
                target: x86_64-apple-darwin
                extension: ""
              - os: windows-2019
                features: z3
                target: x86_64-pc-windows-msvc
                extension: ".exe"
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Install Rust ${{ matrix.toolchain }}
            uses: actions-rs/toolchain@v1
            with:
                profile: default
                toolchain: ${{ matrix.toolchain }}
                target: ${{ matrix.target }}
                override: true

          - name: Compute new Version
            id: compute_version
            uses: mathieudutour/github-tag-action@v5.2
            with:
              github_token: ${{ secrets.GITHUB_TOKEN }}
              release_branches: .*
              dry_run: true

          - name: Install Sed on Windows
            if: ${{ contains(matrix.os, 'windows') }}
            run: choco install sed -y

          - name: Update Version in Manifest
            shell: bash
            run: |
              ${{ format('sed -i -e "s/^version[[:space:]]*=[[:space:]]*\"[[:digit:]]*.[[:digit:]]*.[[:digit:]]*\"/version = \"{0}\"/g" Cargo.toml', steps.compute_version.outputs.new_version) }}

          - name: Build
            uses: actions-rs/cargo@v1
            with:
                command: build
                args: --release --target ${{ matrix.target }} --features ${{ matrix.features }}

          - name: Rename Binary
            shell: bash
            run: mv target/${{ matrix.target }}/release/monster${{ matrix.extension }} ./monster-${{ matrix.target }}${{ matrix.extension }}

          - uses: actions/upload-artifact@v2
            with:
              name: monster-${{ matrix.os }}
              path: monster-${{ matrix.target }}${{ matrix.extension }}
              if-no-files-found: error

    release:
        name: Semantic Release
        needs: build
        runs-on: ubuntu-20.04
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Install Rust
            uses: actions-rs/toolchain@v1
            with:
                profile: minimal
                toolchain: 1.50.0
                override: true

          - name: Install Semantic Release for Rust
            uses: actions-rs/cargo@v1
            with:
                command: install
                args: semantic-release-rust --version 1.0.0-alpha.8 --locked

          # The release build is used in the Semantic Release step
          - name: Build
            uses: actions-rs/cargo@v1
            with:
                command: build
                args: --release --all-features

          # Download all binary artifacts to release
          - uses: actions/download-artifact@v2
            with:
              name: monster-ubuntu-20.04
              
          - uses: actions/download-artifact@v2
            with:
              name: monster-windows-2019
              
          - uses: actions/download-artifact@v2
            with:
              name: monster-macos-10.15

          - name: Semantic Release
            uses: cycjimmy/semantic-release-action@v2
            id: semantic
            with:
                semantic_version: 17.1.1
                extra_plugins: |
                    @semantic-release/exec@5.0
                    @semantic-release/git@9.0
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
